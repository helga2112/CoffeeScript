// Generated by CoffeeScript 2.3.2
(function() {
  var addItem, figures, hasMovingFigure, maxCells, ready, rowLength, square;

  hasMovingFigure = false;

  ready = function() {
    var a, i, j, newElement, parent, ref;
    parent = document.body.appendChild(document.createElement('div'));
    parent.className = 'grid-container';
    for (i = j = 0, ref = maxCells; (0 <= ref ? j < ref : j > ref); i = 0 <= ref ? ++j : --j) {
      newElement = parent.appendChild(document.createElement('div'));
      newElement.innerHTML = '<p>' + i + '</p>';
      newElement.className = 'grid-item' + i;
    }
    a = 0;
    return setInterval((function() {
      return addItem();
    }), 1000);
  };

  document.addEventListener("DOMContentLoaded", ready);

  maxCells = 160;

  rowLength = 10;

  square = (function() {
    var color;

    class square {
      move(newPos) {
        var temp;
        if (newPos) {
          this.pos = newPos;
          console.log('move ferst', this.pos);
          temp = document.getElementsByClassName('grid-item' + this.pos);
          return temp[0].style.backgroundColor = 'red';
        } else {
          this.pos = +10;
          temp = document.getElementsByClassName('grid-item' + this.pos);
          temp[0].style.backgroundColor = 'red';
          return console.log(this.pos);
        }
      }

    };

    color = 0x005500;

    square.pos = 0;

    return square;

  }).call(this);

  figures = [square];

  addItem = function() {
    var a, pos;
    a = new square();
    if (!hasMovingFigure) {
      hasMovingFigure = true;
      pos = Math.round(Math.random() * 10);
      return a.move(pos);
    } else {
      a.move();
      return console.log('move next');
    }
  };

  /*            
colorGrigItem = (pos) ->
temp = document.getElementsByClassName('grid-item' + pos)
temp[0].style.backgroundColor = 'red'
*/

}).call(this);
